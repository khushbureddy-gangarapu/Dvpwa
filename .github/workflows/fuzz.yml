# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
    
  pull_request:
    branches: [ master ]
       


  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest    
     
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install atheris
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        
    - name: Build and push docker image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: khushi2/oss-fuzz
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
  
  Fuzzing:
     runs-on: ubuntu-latest
     concurrency:
      group: ${{ github.workflow }}-${{ matrix.sanitizer }}-${{ github.ref }}
      cancel-in-progress: true
     strategy:
        fail-fast: false
        matrix:
            sanitizer: [address]
     steps:
     - uses: actions/checkout@v3
     - name: Build Fuzzers (${{ matrix.sanitizer }})
       id: build
       uses: google/clusterfuzzlite/actions/build_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}    
        language: python
        dry-run: false
        sanitizer: ${{ matrix.sanitizer }}
        upload-build: true
        keep-unaffected-fuzz-targets: true
        
     - name: Scan Report
       uses: actions/upload-artifact@v2
       with:
          name: scan-report
          path: 'report.html' 
        
     - name: Run Fuzzers (${{ matrix.sanitizer }})
       uses: google/clusterfuzzlite/actions/run_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}
        language: python
        fuzz-seconds: 600
        mode: 'batch'
        dry-run: false
        minimize-crashes: 1
        report-unreproducible-crashes: true
        keep-unaffected-fuzz-targets: true
        sanitizer: ${{ matrix.sanitizer }}
        
  Pruning:
    runs-on: ubuntu-latest
    steps:
    
    - name: Build Fuzzers
      id: build
      uses: google/clusterfuzzlite/actions/build_fuzzers@v1
      with:
        language: python
        upload-build: true
        

    - name: Run Fuzzers
      id: run
      uses: google/clusterfuzzlite/actions/run_fuzzers@v1
      with:
        language: python
        github-token: ${{ secrets.TOKEN }}
        fuzz-seconds: 600
        mode: 'prune'
  
  
  base_branch_cov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.base_ref }}
      - name: Use Node.js v16.11.0
        uses: actions/setup-node@v1
        with:
          node-version: v16.11.0

      - name: Install dependencies
        run: yarn
      - name: Jest installation
        run: yarn add --dev jest 

     
        
      - name: Run test coverage
        run: yarn run test -- --coverage --watchAll=true


      - name: Upload code coverage for ref branch
        uses: actions/upload-artifact@v2
        with:
          name: ref-lcov.info
          path: ./coverage/lcov.info

  checks:
    runs-on: ubuntu-latest
    needs: base_branch_cov
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js v16.11.0
        uses: actions/setup-node@v1
        with:
          node-version: v16.11.0

      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v2
        with:
          name: ref-lcov.info

      - name: Install dependencies
        run: yarn

      - name: Run test coverage
        run: yarn test --coverage
        
      - name: Jest installation
        run: yarn add --dev jest
        
      - name: Run jest coverage
        run: yarn run test -- --coverage --watchAll=true

      #  Compares two code coverage files and generates report as a comment
      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@v1
        with:
          lcov-file: "./coverage/lcov.info"
          base-lcov-file: "./lcov.info"
          minimum-ratio: 0 # Fails Github action once code coverage is decreasing
          send-summary-comment: true
          show-annotations: "warning" # Possible options warning|error    
