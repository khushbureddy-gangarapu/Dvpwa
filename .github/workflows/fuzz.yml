# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
    
  pull_request:
    branches: [ master ]      


  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest    
     
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install atheris
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        
    - name: Build and push docker image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: khushi2/oss-fuzz
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
  
  
  Fuzzing:
     runs-on: ubuntu-latest
     concurrency:
      group: ${{ github.workflow }}-${{ matrix.sanitizer }}-${{ github.ref }}
      cancel-in-progress: true
     strategy:
        fail-fast: false
        matrix:
            sanitizer: [address]
     steps:
     - uses: actions/checkout@v3
     - name: Build Fuzzers (${{ matrix.sanitizer }})
       id: build
       uses: google/clusterfuzzlite/actions/build_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}    
        language: python
        dry-run: false
        sanitizer: ${{ matrix.sanitizer }}
        upload-build: true
        keep-unaffected-fuzz-targets: true
        
     - name: Scan Report
       uses: actions/upload-artifact@v2
       with:
          name: scan-report
          path: 'report.html' 
        
     - name: Run Fuzzers (${{ matrix.sanitizer }})
       uses: google/clusterfuzzlite/actions/run_fuzzers@v1
       with:
        github-token: ${{ secrets.TOKEN }}
        language: python
        fuzz-seconds: 600
        mode: 'batch'
        dry-run: false
        minimize-crashes: 1
        report-unreproducible-crashes: true
        keep-unaffected-fuzz-targets: true
        sanitizer: ${{ matrix.sanitizer }}
        
  Pruning:
    runs-on: ubuntu-latest
    steps:
    
    - name: Build Fuzzers
      id: build
      uses: google/clusterfuzzlite/actions/build_fuzzers@v1
      with:
        language: python
        upload-build: true
        

    - name: Run Fuzzers
      id: run
      uses: google/clusterfuzzlite/actions/run_fuzzers@v1
      with:
        language: python
        github-token: ${{ secrets.TOKEN }}
        fuzz-seconds: 600
        mode: 'prune'
  
  
  Coverage:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ matrix.sanitizer }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
        - name: Coverage comment
          id: coverage_comment
          uses: ewjoachim/python-coverage-comment-action@v2
          with:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
            VERBOSE: true

        -  name: Store Pull Request comment to be posted
           uses: actions/upload-artifact@v2
           if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
           with:
            name: python-coverage-comment-action
            path: python-coverage-comment-action.txt
       
    
        - name: Post comment
          uses: ewjoachim/python-coverage-comment-action@v2
          if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
          with:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
            VERBOSE: true
